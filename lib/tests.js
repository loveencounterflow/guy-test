// Generated by CoffeeScript 1.8.0
(function() {
  var TRM, alert, badge, debug, echo, fetch_data_from_network, help, info, log, read_file, rpr, settings, test, urge, warn, whisper;

  TRM = require('coffeenode-trm');

  rpr = TRM.rpr.bind(TRM);

  badge = 'GUY-TEST/tests';

  log = TRM.get_logger('plain', badge);

  info = TRM.get_logger('info', badge);

  whisper = TRM.get_logger('whisper', badge);

  alert = TRM.get_logger('alert', badge);

  debug = TRM.get_logger('debug', badge);

  warn = TRM.get_logger('warn', badge);

  help = TRM.get_logger('help', badge);

  urge = TRM.get_logger('urge', badge);

  echo = TRM.echo.bind(TRM);

  test = require('./main');

  read_file = function(route, handler) {
    return (require('fs')).readFile(route, {
      encoding: 'utf-8'
    }, function(error, text) {
      return handler(error, text);
    });
  };

  fetch_data_from_network = function(url, handler) {
    return setImmediate((function(_this) {
      return function() {
        return handler(null, 'the webpage you requested');
      };
    })(this));
  };

  this["sync; fails because argument to `T.ok` isn't `true`"] = function(T) {
    return T.ok(123 === 456);
  };

  this["sync; calling `T.fail`, but proceeding with a successful test"] = function(T) {
    T.fail("this was not in my plan");
    return T.eq(108, 108);
  };

  this["async; fails to call `done` within timeout limits"] = function(T, done) {
    return fetch_data_from_network('http://example.com', function(error, result) {
      if (error != null) {
        return done(error);
      }
      return setTimeout(done, 350);
    });
  };

  if (module.parent == null) {
    settings = {
      'timeout': 250
    };
    test(this, settings);
  }

}).call(this);
